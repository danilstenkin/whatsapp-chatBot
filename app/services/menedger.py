from app.db.database import save_message
from app.services.messenger import send_whatsapp_response
from app.services.deepSeek import generate_reply
from app.db.redis_client import set_lead_state, save_lead_state, get_lead_state
from app.validators.user_data import is_valid_full_name, is_valid_iin, extract_float_from_text
from app.db.utils import (
    update_full_name_by_phone,
    update_city_by_phone,
    update_iin_by_phone,
    update_credit_types_by_phone,
    update_total_debt_by_phone,
    update_monthly_payment_by_phone,
    update_overdue_days_by_phone,
    update_has_overdue_by_phone,
    update_has_official_income_by_phone,
    update_has_business_by_phone,
    update_has_property_by_phone,
    update_property_types_by_phone,
    update_has_spouse_by_phone,
    update_social_status_by_phone,
    update_has_children_by_phone, 
    update_problem_description_by_phone,
    get_full_client_data
)
from app.services.security import encrypt
from app.validators.credit_types import parse_credit_selection, parse_social_status_selection, parse_buisness_selection

from app.services.create_task_in_bitrix import send_lead_to_bitrix
from datetime import datetime
from app.logger_config import logger


async def dialog_menedger(from_number: str, message_text: str):
    state = await get_lead_state(from_number)

    if state is None:
        welcome_text = (
            "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! üëã\n"
            "–í—ã –Ω–∞–ø–∏—Å–∞–ª–∏ –≤ —é—Ä–∏–¥–∏—á–µ—Å–∫—É—é –∫–æ–º–ø–∞–Ω–∏—é *YCG ‚Äì –ó–∞—â–∏—Ç–∞ –ø—Ä–∞–≤ –∑–∞—ë–º—â–∏–∫–æ–≤* ‚öñÔ∏è\n\n"
            "–ú—ã –ø–æ–º–æ–≥–∞–µ–º —Ä–µ—à–∏—Ç—å —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –≤–æ–ø—Ä–æ—Å—ã:\n"
            "üìå –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–ª–∞—Ç—ë–∂–µ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏\n"
            "üìå –ë–∞–Ω–∫—Ä–æ—Ç—Å—Ç–≤–æ —Ñ–∏–∑–∏—á–µ—Å–∫–∏—Ö –ª–∏—Ü\n"
            "üìå –ü–µ—Ä–µ–≥–æ–≤–æ—Ä—ã —Å –±–∞–Ω–∫–∞–º–∏ –∏ –ú–§–û\n\n"
            "–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å –∫–∞–∫–æ–π –ø—Ä–æ–±–ª–µ–º–æ–π –≤—ã —Å—Ç–æ–ª–∫–Ω—É–ª–∏—Å—å? –ú—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –≤–∞–º –ø–æ–º–æ—á—å ü§ù"
        )
        await save_lead_state(phone=from_number)
        await send_whatsapp_response(from_number, welcome_text)
            


            
    elif state == "gpt_problem_empathy":
       try:
              logger.info(f"–ù–∞—á–∞–ª–æ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è gpt_problem_empathy –¥–ª—è {from_number}")
              
              base_prompt = """
              –†–ê–ó–ì–û–í–ê–†–ò–í–ê–ô –í–°–ï–ì–î–ê –ù–ê –í–´
              –¢—ã ‚Äî –¥–æ–±—Ä–æ–∂–µ–ª–∞—Ç–µ–ª—å–Ω—ã–π —é—Ä–∏–¥–∏—á–µ—Å–∫–∏–π –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω—Å–∫–æ–π –∫–æ–º–ø–∞–Ω–∏–∏ YCG. –ö–ª–∏–µ–Ω—Ç —Ç–æ–ª—å–∫–æ —á—Ç–æ –ø–æ–¥–µ–ª–∏–ª—Å—è —Å–≤–æ–µ–π —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π –ø—Ä–æ–±–ª–µ–º–æ–π.
              
              –¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –ø—Ä–æ—è–≤–∏—Ç—å —Å–æ—á—É–≤—Å—Ç–≤–∏–µ, –ø–æ–∫–∞–∑–∞—Ç—å, —á—Ç–æ –æ–Ω –≤–∞–∂–µ–Ω, –∏ –º—è–≥–∫–æ —É—Ç–æ—á–Ω–∏—Ç—å –∫–∞–∫–æ–π-–Ω–∏–±—É–¥—å –≤–æ–ø—Ä–æ—Å, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –ø–æ–ª–µ–∑–µ–Ω –¥–ª—è —é—Ä–∏—Å—Ç–∞. 
              –ü–∏—à–∏ –ø–æ-—á–µ–ª–æ–≤–µ—á–µ—Å–∫–∏, –Ω–µ –∫–∞–∫ —Ä–æ–±–æ—Ç, –±—É–¥—å –∫—Ä–∞—Ç–æ–∫.
              –ü–æ–ø—Ä–æ—Å–∏ —á—Ç–æ–±—ã –æ—Ç–≤–µ—Ç–∏–ª–∏ –æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º
              """
              logger.debug(f"[{from_number}][{state}] - –°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω –ø—Ä–æ–º—Ç –¥–ª—è GPT: {base_prompt.strip()[:100]}...")

              await save_message(from_number, message_text, role="user")

              logger.info(f"[{from_number}][{state}] - –ò–Ω–∏—Ü–∏–∏—Ä–æ–≤–∞–Ω –∑–∞–ø—Ä–æ—Å –∫ GPT –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç–≤–µ—Ç–∞ {from_number}")

              reply = await generate_reply(from_number, message_text, base_prompt)

              await send_whatsapp_response(from_number, reply)
              await save_message(from_number, reply, role="assistant")

              if await set_lead_state(from_number, "gpt_problem_dig_deeper"):
                    logger.info(f"[{from_number}][{state}] - –°–æ—Å—Ç–æ—è–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ gpt_problem_dig_deeper –¥–ª—è {from_number}")

       except Exception as e:
              logger.error(f"[{from_number}][{state}] - –û—à–∏–±–∫–∞ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ gpt_problem_empathy –¥–ª—è {from_number}: {str(e)}", exc_info=True)
              
              error_message = "–ò–∑–≤–∏–Ω–∏—Ç–µ, –≤–æ–∑–Ω–∏–∫–ª–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å –ø–æ–∑–∂–µ."
              await send_whatsapp_response(from_number, error_message)
              logger.error(f"[{from_number}][{state}] - –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {from_number} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ")


    elif state == "gpt_problem_dig_deeper":
       try:
              logger.info(f"[DEEP DIVE] –ù–∞—á–∞–ª–æ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–ª—è {from_number}")
              logger.debug(f"–í—Ö–æ–¥—è—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: {message_text[:200]}...")

              base_prompt = """
              –†–ê–ó–ì–û–í–ê–†–ò–í–ê–ô –í–°–ï–ì–î–ê –ù–ê –í–´
              –¢—ã ‚Äî –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω—Å–∫–∏–π —é—Ä–∏–¥–∏—á–µ—Å–∫–∏–π –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç YCG. –ö–ª–∏–µ–Ω—Ç —Ä–∞—Å—Å–∫–∞–∑–∞–ª –æ —Å–≤–æ–µ–π –ø—Ä–æ–±–ª–µ–º–µ, —Ç–µ–ø–µ—Ä—å –Ω—É–∂–Ω–æ —É—Ç–æ—á–Ω–∏—Ç—å –¥–µ—Ç–∞–ª–∏, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –ø–æ–ª–µ–∑–Ω—ã —é—Ä–∏—Å—Ç—É.
              –û–ø–∏—Ä–∞–π—Å—è –Ω–∞ –¥–∏–∞–ª–æ–≥ (–∫–ª–∏–µ–Ω—Ç - user, —Ç—ã - assistant).
              –ù–µ –≥–æ–≤–æ—Ä–∏ —á—Ç–æ –¥–µ–ª–∞—Ç—å, –∑–∞–¥–∞–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —É—Ç–æ—á–Ω—è—é—â–∏–π –≤–æ–ø—Ä–æ—Å –ø–æ –¥–µ–ª—É.
              –ü–æ–ø—Ä–æ—Å–∏ –æ—Ç–≤–µ—Ç–∏—Ç—å –æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º.
              """
              await save_message(from_number, message_text, role="user")
              logger.info(f"[{from_number}][{state}] - –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {from_number} —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ –∏—Å—Ç–æ—Ä–∏–∏")

              start_time = datetime.now()
              gpt_reply = await generate_reply(from_number, message_text, base_prompt)
              exec_time = (datetime.now() - start_time).total_seconds()
              
              logger.info(f"[{from_number}][{state}] - GPT –æ—Ç–≤–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –∑–∞ {exec_time:.2f} —Å–µ–∫")
              logger.debug(f"[{from_number}][{state}] - –û—Ç–≤–µ—Ç GPT ({len(gpt_reply)} chars): {gpt_reply[:200]}...")

              if not gpt_reply or len(gpt_reply.strip()) < 10:
                     logger.error(f"[{from_number}][{state}] - GPT –≤–µ—Ä–Ω—É–ª –ø—É—Å—Ç–æ–π –∏–ª–∏ —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π –æ—Ç–≤–µ—Ç")
                     raise ValueError("–ù–µ–≤–∞–ª–∏–¥–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç GPT")

              await send_whatsapp_response(from_number, gpt_reply)
              await save_message(from_number, gpt_reply, role="assistant")
              logger.info(f"[{from_number}][{state}] - –û—Ç–≤–µ—Ç —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω")

              await set_lead_state(from_number, "gpt_offer_consultation")
              logger.info(f"[{from_number}][{state}] - –ü–µ—Ä–µ—Ö–æ–¥ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ gpt_offer_consultation")

              if "?" not in gpt_reply:
                     logger.warning("GPT –Ω–µ –∑–∞–¥–∞–ª –≤–æ–ø—Ä–æ—Å –≤ –æ—Ç–≤–µ—Ç–µ")

       except Exception as e:
              logger.error(f"[{from_number}][{state}] - –û—à–∏–±–∫–∞ –≤ gpt_problem_dig_deeper: {str(e)}", exc_info=True)
              
              fallback_msg = "–ë–ª–∞–≥–æ–¥–∞—Ä—é –∑–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é. –ß—Ç–æ–±—ã –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å —Ä–µ—à–µ–Ω–∏–µ, –º–Ω–µ –Ω—É–∂–Ω–æ —É—Ç–æ—á–Ω–∏—Ç—å –æ–¥–∏–Ω –º–æ–º–µ–Ω—Ç. –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ, –∫–∞–∫ –¥–∞–≤–Ω–æ —É –≤–∞—Å —ç—Ç–∞ –ø—Ä–æ–±–ª–µ–º–∞?"
              await send_whatsapp_response(from_number, fallback_msg)
              await set_lead_state(from_number, "gpt_offer_consultation")
              
              logger.info(f"[{from_number}] - –û—Ç–ø—Ä–∞–≤–ª–µ–Ω fallback-–æ—Ç–≤–µ—Ç –∏ –æ—Å—É—â–µ—Å—Ç–≤–ª–µ–Ω –ø–µ—Ä–µ—Ö–æ–¥")


    elif state == "gpt_offer_consultation":   
          try:
                logger.info(f"[CONSULTATION OFFER] - –ù–∞—á–∞–ª–æ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–ª—è {from_number}")
                logger.debug(f"[{from_number}][{state}] - –í—Ö–æ–¥—è—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: {message_text[:200]}...")

                base = """
              –¢—ã ‚Äî –≤–µ–¥—É—â–∏–π –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω—Å–∫–∏–π —é—Ä–∏—Å—Ç-–∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç YCG. –°—Ñ–æ—Ä–º—É–ª–∏—Ä—É–π –æ—Ç–≤–µ—Ç –∫–ª–∏–µ–Ω—Ç—É –ø–æ —Å–ª–µ–¥—É—é—â–∏–º –ø—Ä–∞–≤–∏–ª–∞–º:

              1. –§–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞:
              –ò—Å—Ö–æ–¥—è –∏–∑ –æ–ø–∏—Å–∞–Ω–Ω–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏ —Å {–∫—Ä–∞—Ç–∫–æ_—Å—É—Ç—å_–ø—Ä–æ–±–ª–µ–º—ã}, –º—ã –Ω–∞–±–ª—é–¥–∞–µ–º {–æ—Å–Ω–æ–≤–Ω—ã–µ_—Ä–∏—Å–∫–∏}.
              –ù–µ –∑–∞–¥–∞–≤–∞–π –Ω–∏ –æ–¥–Ω–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞ –ë—É–¥—å –∫—Ä–∞—Ç–æ–∫ –∏ —Ç–≤–æ—è –≥–ª–∞–≤–Ω–∞—è –∑–∞–¥–∞—á–∞ —É–±–µ–¥–∏—Ç—å —á–µ–ª–æ–≤–µ–∫–∞ —á—Ç–æ –µ–º—É –Ω–∞–¥–æ –∫ –Ω–∞–º –ø—Ä–∏–¥—Ç–∏
              –ö–æ–≥–¥–∞ —Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å —Ç–µ–∫—Å—Ç –∂–∏—Ä–Ω—ã–º –¥–µ–ª–∞–π –≤–æ—Ç —Ç–∞–∫ ->  *–ø—Ä–∏–≤–µ—Ç*

              2. –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ —Å—Ç–∏–ª—é:
              ‚ñ∏ –°—Ç—Ä–æ–≥–æ –Ω–∞ "–í—ã"
              ‚ñ∏ –£–≤–∞–∂–∏—Ç–µ–ª—å–Ω–æ, –Ω–æ —Ç–≤–µ—Ä–¥–æ
              ‚ñ∏ –ë–µ–∑ –≤–æ–ø—Ä–æ—Å–æ–≤ –≤ –∫–æ–Ω—Ü–µ
              ‚ñ∏ –ë–µ–∑ —Ñ—Ä–∞–∑ "—Ö–æ—Ç–∏—Ç–µ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è?"
              ‚ñ∏ –ê–∫—Ü–µ–Ω—Ç –Ω–∞ —Å—Ä–æ—á–Ω–æ—Å—Ç—å –∏ –±–µ—Å–ø–ª–∞—Ç–Ω–æ—Å—Ç—å

              3. –ü—Ä–∏–º–µ—Ä –æ—Ç–≤–µ—Ç–∞:
              ¬´–ê–Ω–∞–ª–∏–∑–∏—Ä—É—è –≤–∞—à—É —Å–∏—Ç—É–∞—Ü–∏—é —Å –¥–æ–ª–≥–∞–º–∏ –≤ 3 –±–∞–Ω–∫–∞—Ö, –º—ã –≤–∏–¥–∏–º —Ä–∏—Å–∫–∏:
              - –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∞—Ä–µ—Å—Ç–∞ –∏–º—É—â–µ—Å—Ç–≤–∞ –≤ —Ç–µ—á–µ–Ω–∏–µ –º–µ—Å—è—Ü–∞
              - –†–æ—Å—Ç –∑–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç–∏ –Ω–∞ 15-20% –µ–∂–µ–∫–≤–∞—Ä—Ç–∞–ª—å–Ω–æ

              –¢–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –∏–∑—É—á–µ–Ω–∏—è –¥–æ–≥–æ–≤–æ—Ä–æ–≤ –∏ —Å—É–¥–µ–±–Ω–æ–π –ø—Ä–∞–∫—Ç–∏–∫–∏ –ø–æ –≤–∞—à–µ–º—É —Ä–µ–≥–∏–æ–Ω—É –º—ã —Å–º–æ–∂–µ–º:
              - –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∑–∞–∫–æ–Ω–Ω—ã–µ –æ—Å–Ω–æ–≤–∞–Ω–∏—è –¥–ª—è –æ—Ç—Å—Ä–æ—á–∫–∏
              - –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –≤–∞—Ä–∏–∞–Ω—Ç—ã —Ä–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏–∏
              - –ó–∞—â–∏—Ç–∏—Ç—å –≤–∞—à–∏ –ø—Ä–∞–≤–∞ –∫–∞–∫ –∑–∞–µ–º—â–∏–∫–∞

              –ó–∞–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –±–µ—Å–ø–ª–∞—Ç–Ω—É—é –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é –≤ YCG ‚Äî —ç—Ç–æ –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π —Å–ø–æ—Å–æ–± –ø–æ–ª—É—á–∏—Ç—å —Ç–æ—á–Ω—ã–π –ø—Ä–æ–≥–Ω–æ–∑ –∏ –ø–ª–∞–Ω –¥–µ–π—Å—Ç–≤–∏–π.¬ª

              5. –ó–∞–ø—Ä–µ—â–µ–Ω–æ:
              √ó –î–∞–≤–∞—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —é—Ä–∏–¥–∏—á–µ—Å–∫–∏–µ —Å–æ–≤–µ—Ç—ã
              √ó –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —à–∞–±–ª–æ–Ω–Ω—ã–µ —Ñ—Ä–∞–∑—ã
              √ó –£–ø–æ–º–∏–Ω–∞—Ç—å –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤
              """
       
                await save_message(from_number, message_text, role="user")
                logger.debug(f"[{from_number}][{state}] - —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ –∏—Å—Ç–æ—Ä–∏—é")

                start_time = datetime.now()
                reply = await generate_reply(from_number, message_text, base)
                exec_time = (datetime.now() - start_time).total_seconds()
                logger.info(f"[{from_number}][{state}] - GPT –æ—Ç–≤–µ—Ç —Å–≥–µ–Ω–∏—Ä–æ–≤–∞–Ω –∑–∞ {exec_time:.2f} —Å–µ–∫")

                if not generate_reply or len(reply.strip()) < 20:
                      logger.error(f"[{from_number}][{state}] - GPT –≤–µ—Ä–Ω—É–ª –Ω–µ–ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç")
                      raise ValueError("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç GPT")

                await send_whatsapp_response(from_number, reply)
                logger.info(f"[{from_number}][{state}] - –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –æ—Ç–≤–µ—Ç –æ—Ç GPT")
                await save_message(from_number, reply, role="assistant")
                logger.info(f"[{from_number}][{state}] - GPT –æ—Ç–≤–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ –ë–î")

                confirmation_msg = "‚úÖ –ì–æ—Ç–æ–≤—ã –ª–∏ –í—ã –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –±–µ—Å–ø–ª–∞—Ç–Ω—É—é –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é?\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ: –î–∞ –∏–ª–∏ –ù–µ—Ç"
                try:
                     sent = await send_whatsapp_response(from_number, confirmation_msg)
                     if not sent:
                            logger.error(f"[{from_number}][{state}] - –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ")

                except Exception as e:
                     logger.error(f"[{from_number}][{state}] - –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {str(e)}")

                await set_lead_state(from_number, "questionnaire")
                logger.info(f"[{from_number}][{state}] - –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–µ -> 'questionnaire'")

          except Exception as e:
                logger.error(f"[{from_number}][{state}] - –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ gpt_offer_consultation: {str(e)}", exc_info=True)


                fallback_msg = (
              "–ë–ª–∞–≥–æ–¥–∞—Ä—é –∑–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é. –î–ª—è —Ç–æ—á–Ω–æ–π –æ—Ü–µ–Ω–∫–∏ –≤–∞—à–µ–≥–æ —Å–ª—É—á–∞—è "
              "–Ω–µ–æ–±—Ö–æ–¥–∏–º–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è —é—Ä–∏—Å—Ç–∞ YCG. –≠—Ç–æ –±–µ—Å–ø–ª–∞—Ç–Ω–æ –∏ –Ω–∏ –∫ —á–µ–º—É –Ω–µ –æ–±—è–∑—ã–≤–∞–µ—Ç. "
              "–ì–æ—Ç–æ–≤—ã –ª–∏ –≤—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (–î–∞/–ù–µ—Ç)"
                )

                await send_whatsapp_response(from_number, fallback_msg)
                await set_lead_state(from_number, "questionnaire")
                logger.info(f"[{from_number}][{state}] - –û—Ç–ø—Ä–∞–≤–ª–µ–Ω fallback-–≤–∞—Ä–∏–∞–Ω—Ç –¥–ª—è {from_number}")


    elif state == "questionnaire":
       message_text = message_text.strip().lower()
       if message_text == "–Ω–µ—Ç":
              await send_whatsapp_response(from_number, "–•–æ—Ä–æ—à–æ, –µ—Å–ª–∏ –ø–µ—Ä–µ–¥—É–º–∞–µ—Ç–µ - –º—ã –≤—Å–µ–≥–¥–∞ –≥–æ—Ç–æ–≤—ã –ø–æ–º–æ—á—å!")
       elif message_text == "–¥–∞":
              await send_whatsapp_response(from_number, "–û—Ç–ª–∏—á–Ω–æ! –î–∞–≤–∞–π—Ç–µ –∑–∞–ø–æ–ª–Ω–∏–º –∞–Ω–∫–µ—Ç—É –¥–ª—è –∑–∞–ø–∏—Å–∏ –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é.")
              await set_lead_state(from_number, "awaiting_full_name")
              await send_whatsapp_response(from_number, 
              "üîπ *–£–∫–∞–∂–∏—Ç–µ –≤–∞—à–µ –ø–æ–ª–Ω–æ–µ –§–ò–û*\n"
              "–§–æ—Ä–º–∞—Ç: –§–∞–º–∏–ª–∏—è –ò–º—è –û—Ç—á–µ—Å—Ç–≤–æ\n"
              "–ü—Ä–∏–º–µ—Ä: *–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á*"
              )
       else:
              await send_whatsapp_response(from_number, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–≤–µ—Ç—å—Ç–µ '–î–∞' –∏–ª–∏ '–ù–µ—Ç'")

    elif state == "awaiting_full_name":
       if is_valid_full_name(message_text):
              message_text = encrypt(message_text)
              await update_full_name_by_phone(from_number, message_text)
              await send_whatsapp_response(from_number, "‚úÖ –§–ò–û —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ")
              await set_lead_state(from_number, "awaiting_city")
              await send_whatsapp_response(from_number, 
              "üîπ *–£–∫–∞–∂–∏—Ç–µ –≤–∞—à –≥–æ—Ä–æ–¥ –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è*\n"
              "–ü—Ä–∏–º–µ—Ä: *–ê–ª–º–∞—Ç—ã*"
              )
       else:
              await send_whatsapp_response(from_number, 
              "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –§–ò–û. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ:\n"
              "‚ñ∏ –§–∞–º–∏–ª–∏—é\n‚ñ∏ –ò–º—è\n‚ñ∏ –û—Ç—á–µ—Å—Ç–≤–æ (–ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏)\n"
              "–ü—Ä–∏–º–µ—Ä: *–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á*"
              )

    elif state == "awaiting_city":
       city = message_text.strip().title()
       if len(city) >= 2:
              await update_city_by_phone(from_number, city)
              await set_lead_state(from_number, "awaiting_iin")
              await send_whatsapp_response(from_number, 
              "‚úÖ –ì–æ—Ä–æ–¥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω\n"
              "üîπ *–£–∫–∞–∂–∏—Ç–µ –≤–∞—à –ò–ò–ù*"
              )
       else:
              await send_whatsapp_response(from_number, 
              "‚ùó –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞\n"
              "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ —Ä–µ–∞–ª—å–Ω—ã–π –≥–æ—Ä–æ–¥ –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è"
              )

    elif state == "awaiting_iin":
       if is_valid_iin(message_text):
              message_text = encrypt(message_text)
              await update_iin_by_phone(from_number, message_text)
              await send_whatsapp_response(from_number, 
              "‚úÖ –ò–ò–ù –ø—Ä–∏–Ω—è—Ç\n"
              "üîπ *–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø—ã –≤–∞—à–∏—Ö –∫—Ä–µ–¥–∏—Ç–æ–≤:*\n\n"
              "1. –ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—å—Å–∫–∏–π –∫—Ä–µ–¥–∏—Ç\n"
              "2. –ó–∞–ª–æ–≥–æ–≤—ã–π –∫—Ä–µ–¥–∏—Ç\n"
              "3. –ê–≤—Ç–æ–∫—Ä–µ–¥–∏—Ç\n"
              "4. –ò–ø–æ—Ç–µ–∫–∞\n"
              "5. –ú–∏–∫—Ä–æ–∑–∞–π–º—ã\n"
              "6. –î–æ–ª–≥–∏ –ø–µ—Ä–µ–¥ —Ñ–∏–∑.–ª–∏—Ü–∞–º–∏\n"
              "7. –ê–ª–∏–º–µ–Ω—Ç—ã\n"
              "8. –î—Ä—É–≥–æ–µ\n\n"
              "–ú–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é\n"
              "–ü—Ä–∏–º–µ—Ä: *1, 4, 5*"
              )
              await set_lead_state(from_number, "awaiting_credit_types")
       else:
              await send_whatsapp_response(from_number, "‚ùó –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –ò–ò–ù\n"
              "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ 12 —Ü–∏—Ñ—Ä –±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤")

    elif state == "awaiting_credit_types":
       selected = parse_credit_selection(message_text)
       if selected:
              await update_credit_types_by_phone(from_number, selected)
              await set_lead_state(from_number, "awaiting_debt_amount")
              await send_whatsapp_response(from_number, 
              "‚úÖ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã\n"
              "üîπ *–£–∫–∞–∂–∏—Ç–µ –æ–±—â—É—é —Å—É–º–º—É –∑–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç–∏*\n"
              "–ú–æ–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –ø—Ä–∏–º–µ—Ä–Ω—É—é —Å—É–º–º—É –≤ —Ç–µ–Ω–≥–µ\n"
              "–ï—Å–ª–∏ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ - –æ—Ç–ø—Ä–∞–≤—å—Ç–µ '-'"
              )
       else:
              await send_whatsapp_response(from_number, 
              "‚ùó –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∏–∑ —Å–ø–∏—Å–∫–∞\n"
              "–ü—Ä–∏–º–µ—Ä: *1, 3, 5*"
              )

    elif state == "awaiting_debt_amount":
       if message_text == "-":
              await send_whatsapp_response(from_number, 
              "üîπ *–£–∫–∞–∂–∏—Ç–µ –≤–∞—à –µ–∂–µ–º–µ—Å—è—á–Ω—ã–π –ø–ª–∞—Ç–µ–∂ –ø–æ –∫—Ä–µ–¥–∏—Ç–∞–º*\n"
              "–ü—Ä–∏–º–µ—Ä: *120000 —Ç–≥*\n"
              "–ï—Å–ª–∏ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ - –æ—Ç–ø—Ä–∞–≤—å—Ç–µ '-'"
              )
              await set_lead_state(from_number, "awaiting_monthly_payment")
       else:  
              totalDebt = extract_float_from_text(message_text)
              if totalDebt is not None:            
                     await update_total_debt_by_phone(from_number, totalDebt)
                     await send_whatsapp_response(from_number, 
                            "‚úÖ –°—É–º–º–∞ –∑–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞\n"
                            "üîπ *–£–∫–∞–∂–∏—Ç–µ –≤–∞—à –µ–∂–µ–º–µ—Å—è—á–Ω—ã–π –ø–ª–∞—Ç–µ–∂*\n"
                            "–ü—Ä–∏–º–µ—Ä: *120000 —Ç–≥*\n"
                            "–ï—Å–ª–∏ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ - –æ—Ç–ø—Ä–∞–≤—å—Ç–µ '-'"
                     )
                     await set_lead_state(from_number, "awaiting_monthly_payment")
              else:
                     await send_whatsapp_response(from_number, 
                            "‚ùó –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Å—É–º–º—É\n"
                            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ —á–∏—Å–ª–æ\n"
                            "–ü—Ä–∏–º–µ—Ä: *1000000 —Ç–≥*"
                     )

    elif state == "awaiting_monthly_payment":
       if message_text == "-":
              await send_whatsapp_response(from_number, 
              "üîπ *–ï—Å—Ç—å –ª–∏ —É –≤–∞—Å –ø—Ä–æ—Å—Ä–æ—á–∫–∏?*\n"
              "–û—Ç–≤–µ—Ç—å—Ç–µ –î–∞/–ù–µ—Ç"
              )
              await set_lead_state(from_number, "waiting_has_overdue")
       else:  
              totalDebt = extract_float_from_text(message_text)
              if totalDebt is not None:            
                     await update_monthly_payment_by_phone(from_number, totalDebt)
                     await send_whatsapp_response(from_number, 
                            "‚úÖ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã\n"
                            "üîπ *–ï—Å—Ç—å –ª–∏ —É –≤–∞—Å –ø—Ä–æ—Å—Ä–æ—á–∫–∏?*\n"
                            "–û—Ç–≤–µ—Ç—å—Ç–µ –î–∞/–ù–µ—Ç"
                     )
                     await set_lead_state(from_number, "waiting_has_overdue")
              else:
                     await send_whatsapp_response(from_number, 
                            "‚ùó –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Å—É–º–º—É\n"
                            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ —á–∏—Å–ª–æ\n"
                            "–ü—Ä–∏–º–µ—Ä: *100000 —Ç–≥*"
                     )

    elif state == "waiting_has_overdue":
       msg = message_text.strip().lower()
       if msg in ["–¥–∞", "–µ—Å—Ç—å", "–¥–∞ –µ—Å—Ç—å", "–¥–∞, –µ—Å—Ç—å"]:
              await update_has_overdue_by_phone(from_number, True)
              await send_whatsapp_response(from_number, 
              "üîπ *–£–∫–∞–∂–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –ø—Ä–æ—Å—Ä–æ—á–∫–∏*"
              )
              await set_lead_state(from_number, "awaiting_overdue_days")
       elif msg in ["–Ω–µ—Ç", "–Ω–µ –±—ã–ª–æ", "–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"]:
              await send_whatsapp_response(from_number, 
              "üîπ *–ï—Å—Ç—å –ª–∏ —É –≤–∞—Å –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –¥–æ—Ö–æ–¥?*\n"
              "–û—Ç–≤–µ—Ç—å—Ç–µ –î–∞/–ù–µ—Ç"
              )
              await set_lead_state(from_number, "awaiting_has_official_income")
       else:
              await send_whatsapp_response(from_number, 
              "‚ùó –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–≤–µ—Ç—å—Ç–µ –î–∞ –∏–ª–∏ –ù–µ—Ç"
              )

    elif state == "awaiting_overdue_days":
       await update_overdue_days_by_phone(from_number, message_text)
       await send_whatsapp_response(from_number, 
              "‚úÖ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã\n"
              "üîπ *–ï—Å—Ç—å –ª–∏ —É –≤–∞—Å –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –¥–æ—Ö–æ–¥?*\n"
              "–û—Ç–≤–µ—Ç—å—Ç–µ –î–∞/–ù–µ—Ç"
       )
       await set_lead_state(from_number, "awaiting_has_official_income")

    elif state == "awaiting_has_official_income":
       msg = message_text.strip().lower()
       if msg in ["–¥–∞", "–µ—Å—Ç—å", "–¥–∞ –µ—Å—Ç—å", "–¥–∞, –µ—Å—Ç—å"]:
              await update_has_official_income_by_phone(from_number, True)
              await send_whatsapp_response(from_number, 
              "üîπ *–ò–º–µ–µ—Ç—Å—è –ª–∏ —É –≤–∞—Å –¢–û–û –∏–ª–∏ –ò–ü?*\n"
              "–û—Ç–≤–µ—Ç—å—Ç–µ –î–∞/–ù–µ—Ç"
              )
              await set_lead_state(from_number, "waiting_has_business")
       elif msg in ["–Ω–µ—Ç", "–Ω–µ –±—ã–ª–æ", "–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"]:
              await send_whatsapp_response(from_number, 
              "üîπ *–ò–º–µ–µ—Ç—Å—è –ª–∏ —É –≤–∞—Å –¢–û–û –∏–ª–∏ –ò–ü?*\n"
              "–û—Ç–≤–µ—Ç—å—Ç–µ –î–∞/–ù–µ—Ç"
              )
              await set_lead_state(from_number, "waiting_has_business")
       else:
              await send_whatsapp_response(from_number, 
              "‚ùó –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–≤–µ—Ç—å—Ç–µ –î–∞ –∏–ª–∏ –ù–µ—Ç"
              )

    elif state == "waiting_has_business":
       msg = message_text.strip().lower()
       if msg in ["–¥–∞", "–µ—Å—Ç—å", "–¥–∞ –µ—Å—Ç—å", "–¥–∞, –µ—Å—Ç—å"]:
              await update_has_business_by_phone(from_number, True)
              await send_whatsapp_response(from_number, 
              "üîπ *–ò–º–µ–µ—Ç—Å—è –ª–∏ —É –≤–∞—Å –∏–º—É—â–µ—Å—Ç–≤–æ?*\n"
              "–û—Ç–≤–µ—Ç—å—Ç–µ –î–∞/–ù–µ—Ç"
              )
              await set_lead_state(from_number, "awaiting_has_property")
       elif msg in ["–Ω–µ—Ç", "–Ω–µ –±—ã–ª–æ", "–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"]:
              await send_whatsapp_response(from_number, 
              "üîπ *–ò–º–µ–µ—Ç—Å—è –ª–∏ —É –≤–∞—Å –∏–º—É—â–µ—Å—Ç–≤–æ?*\n"
              "–û—Ç–≤–µ—Ç—å—Ç–µ –î–∞/–ù–µ—Ç"
              )
              await set_lead_state(from_number, "awaiting_has_property")
       else:
              await send_whatsapp_response(from_number, 
              "‚ùó –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–≤–µ—Ç—å—Ç–µ –î–∞ –∏–ª–∏ –ù–µ—Ç"
              )

    elif state == "awaiting_has_property":
       msg = message_text.strip().lower()
       if msg in ["–¥–∞", "–µ—Å—Ç—å", "–¥–∞ –µ—Å—Ç—å", "–¥–∞, –µ—Å—Ç—å"]:
              await update_has_property_by_phone(from_number, True)
              await send_whatsapp_response(from_number,
              "üîπ *–£–∫–∞–∂–∏—Ç–µ –≤–∞—à–µ –∏–º—É—â–µ—Å—Ç–≤–æ:*\n\n"
              "1. –î–æ–º\n2. –ö–≤–∞—Ä—Ç–∏—Ä–∞\n3. –ì–∞—Ä–∞–∂\n4. –î–æ–ª—è\n"
              "5. –ê–≤—Ç–æ–º–æ–±–∏–ª—å\n6. –ê–∫—Ü–∏–∏\n7. –î—Ä—É–≥–æ–µ\n8. –ù–µ—Ç –∏–º—É—â–µ—Å—Ç–≤–∞\n\n"
              "–ú–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é\n"
              "–ü—Ä–∏–º–µ—Ä: *1, 3, 5*"
              )
              await set_lead_state(from_number, "awaiting_property_types")
       elif msg in ["–Ω–µ—Ç", "–Ω–µ –±—ã–ª–æ", "–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"]:
              await send_whatsapp_response(from_number, 
              "üîπ *–ï—Å—Ç—å –ª–∏ —É –≤–∞—Å —Å—É–ø—Ä—É–≥(–∞)?*\n"
              "–û—Ç–≤–µ—Ç—å—Ç–µ –î–∞/–ù–µ—Ç"
              )
              await set_lead_state(from_number, " awaiting_has_spouse")
       else:
              await send_whatsapp_response(from_number, 
              "‚ùó –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–≤–µ—Ç—å—Ç–µ –î–∞ –∏–ª–∏ –ù–µ—Ç"
              )

    elif state == "awaiting_property_types":
       selected = parse_buisness_selection(message_text)
       if selected:
              await update_property_types_by_phone(from_number, selected)
              await send_whatsapp_response(from_number, 
              "‚úÖ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã\n"
              "üîπ *–ï—Å—Ç—å –ª–∏ —É –≤–∞—Å —Å—É–ø—Ä—É–≥(–∞)?*\n"
              "–û—Ç–≤–µ—Ç—å—Ç–µ –î–∞/–ù–µ—Ç"
              )
              await set_lead_state(from_number, "awaiting_has_spouse")
       else:
              await send_whatsapp_response(from_number, 
              "‚ùó –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∏–∑ —Å–ø–∏—Å–∫–∞\n"
              "–ü—Ä–∏–º–µ—Ä: *1, 3, 5*"
              )

    elif state == "awaiting_has_spouse":
       msg = message_text.strip().lower()
       if msg in ["–¥–∞", "–µ—Å—Ç—å", "–¥–∞ –µ—Å—Ç—å", "–¥–∞, –µ—Å—Ç—å"]:
              await update_has_spouse_by_phone(from_number, True)
              await send_whatsapp_response(from_number, 
              "üîπ *–ï—Å—Ç—å –ª–∏ —É –≤–∞—Å –Ω–µ—Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ–ª–µ—Ç–Ω–∏–µ –¥–µ—Ç–∏?*\n"
              "–û—Ç–≤–µ—Ç—å—Ç–µ –î–∞ –∏–ª–∏ –ù–µ—Ç"
              )
              await set_lead_state(from_number, "awaiting_has_children")
       elif msg in ["–Ω–µ—Ç", "–Ω–µ –±—ã–ª–æ", "–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"]:
              await send_whatsapp_response(from_number, 
              "üîπ *–ï—Å—Ç—å –ª–∏ —É –≤–∞—Å –Ω–µ—Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ–ª–µ—Ç–Ω–∏–µ –¥–µ—Ç–∏?*\n"
              "–û—Ç–≤–µ—Ç—å—Ç–µ –î–∞ –∏–ª–∏ –ù–µ—Ç"
              )
              await set_lead_state(from_number, "awaiting_has_children")
       else:
              await send_whatsapp_response(from_number, 
              "‚ùó –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–≤–µ—Ç—å—Ç–µ –î–∞ –∏–ª–∏ –ù–µ—Ç"
              )

    elif state == "awaiting_has_children":
       msg = message_text.strip().lower()
       if msg in ["–¥–∞", "–µ—Å—Ç—å", "–¥–∞ –µ—Å—Ç—å", "–¥–∞, –µ—Å—Ç—å"]:
              await update_has_children_by_phone(from_number, True)
              await send_whatsapp_response(from_number, 
              "üîπ *–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à —Å–æ—Ü–∏–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å:*\n\n"
              "1. –õ–∏—Ü–æ —Å –∏–Ω–≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å—é\n2. –ü–æ–ª—É—á–∞—Ç–µ–ª—å –ê–°–ü\n"
              "3. –ú–Ω–æ–≥–æ–¥–µ—Ç–Ω–∞—è —Å–µ–º—å—è\n4. –ò–Ω—ã–µ –ø–æ—Å–æ–±–∏—è/–ª—å–≥–æ—Ç—ã\n"
              "5. –ù–µ –æ—Ç–Ω–æ—à—É—Å—å –∫ –ª—å–≥–æ—Ç–Ω—ã–º –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º\n\n"
              "–ú–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é\n"
              "–ü—Ä–∏–º–µ—Ä: *2, 3*"
              )
              await set_lead_state(from_number, "awaiting_social_status")
       elif msg in ["–Ω–µ—Ç", "–Ω–µ –±—ã–ª–æ", "–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"]:
              await update_has_children_by_phone(from_number, False)
              await send_whatsapp_response(from_number, 
              "üîπ *–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à —Å–æ—Ü–∏–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å:*\n\n"
              "1. –õ–∏—Ü–æ —Å –∏–Ω–≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å—é\n2. –ü–æ–ª—É—á–∞—Ç–µ–ª—å –ê–°–ü\n"
              "3. –ú–Ω–æ–≥–æ–¥–µ—Ç–Ω–∞—è —Å–µ–º—å—è\n4. –ò–Ω—ã–µ –ø–æ—Å–æ–±–∏—è/–ª—å–≥–æ—Ç—ã\n"
              "5. –ù–µ –æ—Ç–Ω–æ—à—É—Å—å –∫ –ª—å–≥–æ—Ç–Ω—ã–º –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º\n\n"
              "–ú–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é\n"
              "–ü—Ä–∏–º–µ—Ä: *2, 3*"
              )
              await set_lead_state(from_number, "awaiting_social_status")
       else:
              await send_whatsapp_response(from_number, 
              "‚ùó –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–≤–µ—Ç—å—Ç–µ –î–∞ –∏–ª–∏ –ù–µ—Ç"
              )

    elif state == "awaiting_social_status":
       try:
              selected = parse_social_status_selection(message_text)
              if not selected:
                     await send_whatsapp_response(
                            from_number,
                            "‚ùó –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∏–∑ —Å–ø–∏—Å–∫–∞\n–ü—Ä–∏–º–µ—Ä: *1, 2, 3*"
                     )
                     return

              # 1. –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Ü–∏–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å
              await update_social_status_by_phone(from_number, selected)

              # 4. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç—É
              await send_whatsapp_response(
              from_number,
              "‚úÖ –ê–Ω–∫–µ—Ç–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞!\n"
              "–ù–∞—à —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.\n\n"
              "–°–ø–∞—Å–∏–±–æ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é!"
              )
              
              # 2. –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã
              base = """–¢–≤–æ—è –∑–∞–¥–∞—á–∞ - —Å–æ–∑–¥–∞—Ç—å –∫—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã –∫–ª–∏–µ–Ω—Ç–∞ –¥–ª—è —é—Ä–∏—Å—Ç–æ–≤  —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–π–¥–µ—Ç –≤ Bitrix24 –∏ –º—ã —é—Ä–∏—Å—Ç—ã –∏–∑ –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–∞, –Ω–µ —Å—Ç–∞–≤—å –Ω–∏–≥–¥–µ ** –∏ * –µ—Å–ª–∏ —á—Ç–æ –Ω–∞–¥–æ —Å–¥–µ–ª–∞—Ç—å –∂–∏—Ä–Ω—ã–º —å–µ–∫—Å—å–æ–º –∏—Å–ø–æ–ª—å–∑—É–π —Ç–∞–∫—É—é –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—é [b]–î–µ—Ç–∏:[/b]"""
              problem = await generate_reply(from_number, "", base)
              await update_problem_description_by_phone(from_number, problem)
              
              # 3. –õ–æ–≥–∏—Ä—É–µ–º –≤ –∫–æ–Ω—Å–æ–ª—å (–¥–ª—è –æ—Ç–ª–∞–¥–∫–∏)
              print("‚úÖ –ê–Ω–∫–µ—Ç–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞ –¥–ª—è –Ω–æ–º–µ—Ä–∞:", from_number)
              
              
              
              # 5. –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ Bitrix24
              client_data = await get_full_client_data(from_number)
              if not client_data:
                     await send_whatsapp_response(from_number, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–∏—Ö –¥–∞–Ω–Ω—ã—Ö")
                     return
              
              bitrix_result = await send_lead_to_bitrix(client_data)
              
              # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
              if not bitrix_result or 'error' in bitrix_result:
                     print("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ Bitrix24:", bitrix_result.get('error', 'Unknown error'))
              
       except Exception as e:
              print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ: {str(e)}")
              await send_whatsapp_response(
              from_number,
              "‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
              )