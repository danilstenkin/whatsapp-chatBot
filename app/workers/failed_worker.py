import asyncio
import json
from app.services.messenger import send_whatsapp_response, TwilioAPIError
from app.db.redis_client import redis_client
from app.logger_config import logger

QUEUE_NAME = "failed_message_queue"
RETRY_DELAY = 10  # —Å–µ–∫—É–Ω–¥—ã –º–µ–∂–¥—É –∏—Ç–µ—Ä–∞—Ü–∏—è–º–∏

async def process_failed_messages():
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ –≤–æ—Ä–∫–µ—Ä–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ failed_message_queue (DLQ)")

    while True:
        try:
            # –ë–µ—Ä—ë–º –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –∏–∑ –æ—á–µ—Ä–µ–¥–∏ (–ù–ï —É–¥–∞–ª—è–µ–º)
            message_json = await redis_client.lindex(QUEUE_NAME, 0)
            if not message_json:
                await asyncio.sleep(RETRY_DELAY)
                continue

            try:
                message = json.loads(message_json)
                phone = message["phone"]
                text = message["text"]

                logger.info(f"[{phone}] –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ DLQ")

                try:
                    await send_whatsapp_response(phone, text)
                    logger.info(f"[{phone}] –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ ‚úÖ")

                    # –¢–æ–ª—å–∫–æ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ ‚Äî —É–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –æ—á–µ—Ä–µ–¥–∏
                    await redis_client.lrem(QUEUE_NAME, count=1, value=message_json)
                    logger.info(f"[{phone}] –°–æ–æ–±—â–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ –∏–∑ failed_message_queue")

                except TwilioAPIError as e:
                    logger.error(f"[{phone}] –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–µ: {str(e)}")
                    await asyncio.sleep(RETRY_DELAY)

            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ DLQ: {str(e)}")
                # –ï—Å–ª–∏ –≤–æ–æ–±—â–µ –Ω–µ –º–æ–∂–µ–º —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å ‚Äî –ª—É—á—à–µ —É–¥–∞–ª–∏—Ç—å –∫—Ä–∏–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:
                await redis_client.lrem(QUEUE_NAME, count=1, value=message_json)
                logger.warning(f"[DLQ] –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ –∏–∑ –æ—á–µ—Ä–µ–¥–∏")

        except Exception as e:
            logger.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ DLQ –≤–æ—Ä–∫–µ—Ä–µ: {str(e)}")
            await asyncio.sleep(RETRY_DELAY)

if __name__ == "__main__":
    asyncio.run(process_failed_messages())
