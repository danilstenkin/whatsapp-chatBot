import asyncio
import json
import redis.asyncio as aioredis
import os
from app.services.messenger import send_whatsapp_response
from app.logger_config import logger  # –ï—Å–ª–∏ —É —Ç–µ–±—è —É–∂–µ –ø–æ–¥–∫–ª—é—á–µ–Ω logger

REDIS_HOST = os.getenv("REDIS_HOST", "redis")
REDIS_PORT = int(os.getenv("REDIS_PORT", 6379))
QUEUE_NAME = "send_message_queue"

async def worker():
    redis_conn = await aioredis.from_url(
        f"redis://{REDIS_HOST}:{REDIS_PORT}",
        decode_responses=True
    )

    logger.info("üöÄ –í–æ—Ä–∫–µ—Ä –∑–∞–ø—É—â–µ–Ω –∏ –∂–¥—ë—Ç —Å–æ–æ–±—â–µ–Ω–∏–π...")

    while True:
        try:
            item = await redis_conn.blpop(QUEUE_NAME)
            if not item:
                continue

            _, message_json = item
            message = json.loads(message_json)
            phone = message["phone"]
            text = message["text"]

            logger.info(f"[QUEUE] –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è {phone}")

            await send_whatsapp_response(phone, text)

        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
            await asyncio.sleep(1)

if __name__ == "__main__":
    asyncio.run(worker())
